
server {
	listen		80;
    	listen		[::]:80;
     	server_name	api.weekend.kim;
     	charset		utf-8;
     	client_max_body_size	75M;

	# # redirect to https
     	# if ($http_x_forwarded_proto != "https") {
     	#     set $redirect_https 1;
     	# 
     	# if ($request_uri = '/heartbeat') {
     	#     set $redirect_https 0;
     	# }
     	# if ($redirect_https = 1) {
     	#     return 301 https://api.weekend.kim$request_uri;
     	# }

	location /favicon.ico { access_log off; log_not_found off; }

	location /static/ {
		alias /srv/weekendkim_backend/.static_root/;
	}

     	location / {
		uwsgi_pass	unix:///tmp/weekendkim_backend.sock;
		include		uwsgi_params;
		
    		proxy_read_timeout 300s;
    		proxy_connect_timeout 75s;
  
          	proxy_set_header X-Real-IP $remote_addr;
          	proxy_set_header HOST $http_host;
          	proxy_set_header X-NginX-Proxy true;
          	proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;

          	# proxy_pass http://127.0.0.1:8080;
          	# proxy_redirect off;
      	}
}

server {
	listen 		443 ssl http2;
	listen 		[::]:443 ssl http2;
	server_name 	api.weekend.kim;
	charset		utf-8;
        client_max_body_size    75M;


	ssl_certificate 	/etc/letsencrypt/live/api.weekend.kim/fullchain.pem; # managed by Certbot
	ssl_certificate_key 	/etc/letsencrypt/live/api.weekend.kim/privkey.pem; # managed by Certbot
	include 		/etc/letsencrypt/options-ssl-nginx.conf; # managed by Certbot
	ssl_dhparam 		/etc/letsencrypt/ssl-dhparams.pem; # managed by Certbot

        location /favicon.ico { access_log off; log_not_found off; }

        location /static/ {
                alias /srv/weekendkim_backend/.static_root/;
        }

        location / {
                uwsgi_pass      unix:///tmp/weekendkim_backend.sock;
		include 	uwsgi_params;

		proxy_read_timeout 300s;
                proxy_connect_timeout 75s;

                proxy_set_header X-Real-IP $remote_addr;
                proxy_set_header HOST $http_host;
                proxy_set_header X-NginX-Proxy true;
                proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;

                # proxy_pass http://127.0.0.1:8080;
                # proxy_redirect off;
	}
}
